{
  "{\"sourceRoot\":\"D:\\\\Repos\\\\BoardGameWebsite\\\\BoardGameWebsite\\\\ReactExamples\\\\BoardGameWebsite\\\\server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Repos\\\\BoardGameWebsite\\\\BoardGameWebsite\\\\ReactExamples\\\\BoardGameWebsite\",\"filename\":\"D:\\\\Repos\\\\BoardGameWebsite\\\\BoardGameWebsite\\\\ReactExamples\\\\BoardGameWebsite\\\\server\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Repos\\\\BoardGameWebsite\\\\BoardGameWebsite\\\\ReactExamples\\\\BoardGameWebsite\",\"plugins\":[{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Repos\\BoardGameWebsite\\BoardGameWebsite\\ReactExamples\\BoardGameWebsite\\server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Repos\\BoardGameWebsite\\BoardGameWebsite\\ReactExamples\\BoardGameWebsite",
      "filename": "D:\\Repos\\BoardGameWebsite\\BoardGameWebsite\\ReactExamples\\BoardGameWebsite\\server\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Repos\\BoardGameWebsite\\BoardGameWebsite\\ReactExamples\\BoardGameWebsite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Repos\\BoardGameWebsite\\BoardGameWebsite\\ReactExamples\\BoardGameWebsite\\server\\app.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Repos\\BoardGameWebsite\\BoardGameWebsite\\ReactExamples\\BoardGameWebsite\\server\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Repos\\BoardGameWebsite\\BoardGameWebsite\\ReactExamples\\BoardGameWebsite\\server\\",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _router = _interopRequireDefault(require(\"./api/router.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// Import needed libs\n// Import API router.\n// Create express app.\nvar app = new _express[\"default\"](); // Log all requests given to the server, and pass the request on.\n\napp.use(function (req, res, next) {\n  console.log(\"\".concat(req.method, \" at \").concat(req.path));\n  next();\n}); // Setup the router to use /api as starting datapath.\n\napp.use('/api', _router[\"default\"]); // Setup static page service from public folder.\n\nvar middleware = _express[\"default\"][\"static\"]('./public');\n\napp.use('/', middleware); // tell the app to listen on port 3000\n\napp.listen(3000); // confirmation the server is running.\n\nconsole.log('Listening on localhost, port 3000');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJFeHByZXNzIiwidXNlIiwicmVxIiwicmVzIiwibmV4dCIsImNvbnNvbGUiLCJsb2ciLCJtZXRob2QiLCJwYXRoIiwiZGF0YVJvdXRlciIsIm1pZGRsZXdhcmUiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBR0E7Ozs7QUFKQTtBQUdBO0FBR0E7QUFDQSxJQUFNQSxHQUFHLEdBQUcsSUFBSUMsbUJBQUosRUFBWixDLENBRUE7O0FBQ0FELEdBQUcsQ0FBQ0UsR0FBSixDQUFRLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQzFCQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsV0FBZUosR0FBRyxDQUFDSyxNQUFuQixpQkFBZ0NMLEdBQUcsQ0FBQ00sSUFBcEM7QUFDQUosRUFBQUEsSUFBSTtBQUNMLENBSEQsRSxDQUtBOztBQUNBTCxHQUFHLENBQUNFLEdBQUosQ0FBUSxNQUFSLEVBQWdCUSxrQkFBaEIsRSxDQUVBOztBQUNBLElBQU1DLFVBQVUsR0FBR1YsOEJBQWUsVUFBZixDQUFuQjs7QUFDQUQsR0FBRyxDQUFDRSxHQUFKLENBQVEsR0FBUixFQUFhUyxVQUFiLEUsQ0FFQTs7QUFDQVgsR0FBRyxDQUFDWSxNQUFKLENBQVcsSUFBWCxFLENBQ0E7O0FBQ0FOLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG1DQUFaIiwic291cmNlUm9vdCI6IkQ6XFxSZXBvc1xcQm9hcmRHYW1lV2Vic2l0ZVxcQm9hcmRHYW1lV2Vic2l0ZVxcUmVhY3RFeGFtcGxlc1xcQm9hcmRHYW1lV2Vic2l0ZVxcc2VydmVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnQgbmVlZGVkIGxpYnNcclxuaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcydcclxuXHJcbi8vIEltcG9ydCBBUEkgcm91dGVyLlxyXG5pbXBvcnQgZGF0YVJvdXRlciBmcm9tICcuL2FwaS9yb3V0ZXIuanMnXHJcblxyXG4vLyBDcmVhdGUgZXhwcmVzcyBhcHAuXHJcbmNvbnN0IGFwcCA9IG5ldyBFeHByZXNzKClcclxuXHJcbi8vIExvZyBhbGwgcmVxdWVzdHMgZ2l2ZW4gdG8gdGhlIHNlcnZlciwgYW5kIHBhc3MgdGhlIHJlcXVlc3Qgb24uXHJcbmFwcC51c2UoKHJlcSwgcmVzLCBuZXh0KSA9PiB7XHJcbiAgY29uc29sZS5sb2coYCR7cmVxLm1ldGhvZH0gYXQgJHtyZXEucGF0aH1gKVxyXG4gIG5leHQoKVxyXG59KVxyXG5cclxuLy8gU2V0dXAgdGhlIHJvdXRlciB0byB1c2UgL2FwaSBhcyBzdGFydGluZyBkYXRhcGF0aC5cclxuYXBwLnVzZSgnL2FwaScsIGRhdGFSb3V0ZXIpXHJcblxyXG4vLyBTZXR1cCBzdGF0aWMgcGFnZSBzZXJ2aWNlIGZyb20gcHVibGljIGZvbGRlci5cclxuY29uc3QgbWlkZGxld2FyZSA9IEV4cHJlc3Muc3RhdGljKCcuL3B1YmxpYycpXHJcbmFwcC51c2UoJy8nLCBtaWRkbGV3YXJlKVxyXG5cclxuLy8gdGVsbCB0aGUgYXBwIHRvIGxpc3RlbiBvbiBwb3J0IDMwMDBcclxuYXBwLmxpc3RlbigzMDAwKVxyXG4vLyBjb25maXJtYXRpb24gdGhlIHNlcnZlciBpcyBydW5uaW5nLlxyXG5jb25zb2xlLmxvZygnTGlzdGVuaW5nIG9uIGxvY2FsaG9zdCwgcG9ydCAzMDAwJylcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "Express",
        "use",
        "req",
        "res",
        "next",
        "console",
        "log",
        "method",
        "path",
        "dataRouter",
        "middleware",
        "listen"
      ],
      "mappings": ";;AACA;;AAGA;;;;AAJA;AAGA;AAGA;AACA,IAAMA,GAAG,GAAG,IAAIC,mBAAJ,EAAZ,C,CAEA;;AACAD,GAAG,CAACE,GAAJ,CAAQ,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BC,EAAAA,OAAO,CAACC,GAAR,WAAeJ,GAAG,CAACK,MAAnB,iBAAgCL,GAAG,CAACM,IAApC;AACAJ,EAAAA,IAAI;AACL,CAHD,E,CAKA;;AACAL,GAAG,CAACE,GAAJ,CAAQ,MAAR,EAAgBQ,kBAAhB,E,CAEA;;AACA,IAAMC,UAAU,GAAGV,8BAAe,UAAf,CAAnB;;AACAD,GAAG,CAACE,GAAJ,CAAQ,GAAR,EAAaS,UAAb,E,CAEA;;AACAX,GAAG,CAACY,MAAJ,CAAW,IAAX,E,CACA;;AACAN,OAAO,CAACC,GAAR,CAAY,mCAAZ",
      "sourceRoot": "D:\\Repos\\BoardGameWebsite\\BoardGameWebsite\\ReactExamples\\BoardGameWebsite\\server\\",
      "sourcesContent": [
        "// Import needed libs\r\nimport Express from 'express'\r\n\r\n// Import API router.\r\nimport dataRouter from './api/router.js'\r\n\r\n// Create express app.\r\nconst app = new Express()\r\n\r\n// Log all requests given to the server, and pass the request on.\r\napp.use((req, res, next) => {\r\n  console.log(`${req.method} at ${req.path}`)\r\n  next()\r\n})\r\n\r\n// Setup the router to use /api as starting datapath.\r\napp.use('/api', dataRouter)\r\n\r\n// Setup static page service from public folder.\r\nconst middleware = Express.static('./public')\r\napp.use('/', middleware)\r\n\r\n// tell the app to listen on port 3000\r\napp.listen(3000)\r\n// confirmation the server is running.\r\nconsole.log('Listening on localhost, port 3000')\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1619394801045
  },
  "{\"sourceRoot\":\"D:\\\\Repos\\\\BoardGameWebsite\\\\BoardGameWebsite\\\\ReactExamples\\\\BoardGameWebsite\\\\server\\\\api\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Repos\\\\BoardGameWebsite\\\\BoardGameWebsite\\\\ReactExamples\\\\BoardGameWebsite\",\"filename\":\"D:\\\\Repos\\\\BoardGameWebsite\\\\BoardGameWebsite\\\\ReactExamples\\\\BoardGameWebsite\\\\server\\\\api\\\\router.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Repos\\\\BoardGameWebsite\\\\BoardGameWebsite\\\\ReactExamples\\\\BoardGameWebsite\",\"plugins\":[{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Repos\\BoardGameWebsite\\BoardGameWebsite\\ReactExamples\\BoardGameWebsite\\server\\api\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Repos\\BoardGameWebsite\\BoardGameWebsite\\ReactExamples\\BoardGameWebsite",
      "filename": "D:\\Repos\\BoardGameWebsite\\BoardGameWebsite\\ReactExamples\\BoardGameWebsite\\server\\api\\router.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Repos\\BoardGameWebsite\\BoardGameWebsite\\ReactExamples\\BoardGameWebsite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Repos\\BoardGameWebsite\\BoardGameWebsite\\ReactExamples\\BoardGameWebsite\\server\\api\\router.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Repos\\BoardGameWebsite\\BoardGameWebsite\\ReactExamples\\BoardGameWebsite\\server\\api\\router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Repos\\BoardGameWebsite\\BoardGameWebsite\\ReactExamples\\BoardGameWebsite\\server\\api\\",
        "sourceFileName": "router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// import needed libs\n// read in game data from output file from module 2-1\nvar rawGameData = _fs[\"default\"].readFileSync('server/api/output.json', {\n  encoding: 'utf8'\n});\n\nvar fullGames = JSON.parse(rawGameData); // create a reduced content version of all games for use on landing page.\n\nvar reducedGames = fullGames.map(function (game) {\n  return {\n    id: game.id,\n    name: game.name,\n    year: game.year,\n    players: game.players\n  };\n}); // Create express router object\n\nvar router = new _express[\"default\"].Router(); // Setup for a /games endpoint will return JSON for all games in the output file.\n\nrouter.get('/games', function (req, res) {\n  res.json(reducedGames);\n}); // Setup for a /game/id endpoint, returns a single game if found based on ID given.\n\nrouter.get('/game/:id', function (req, res) {\n  // take the ID given in URL and make it an int then set it to a variable for use.\n  var gameID = req.params.id; // Find any games with matching ID, return that object with full details.\n\n  var match = fullGames.find(function (game) {\n    // Comparing ints so not sure why you would want === that doesnt work.\n    return game.id === gameID;\n  }); // If no match was found return 404, if match is found return it as JSON.\n\n  if (!match) {\n    res.status(404).json({\n      error: 'id not found'\n    });\n  } else {\n    res.json(match);\n  }\n}); // Insert Data Route that will update the JSON file which we are using as a base for all games in the system\n// This creates a saved version of the game which will render the next time the page is opened.\n\nrouter.post('/game/insert/', _express[\"default\"].json(), function (req, res) {\n  var flag = true;\n  console.log(JSON.stringify(req.body.values, null, 2));\n  fullGames.forEach(function (element) {\n    if (req.body.values.id === element.id) {\n      console.error('An object with that ID already exists try a new ID');\n      flag = false;\n    } else if (req.body.values.id === null || req.body.values.name === null) {\n      console.error('An error has occured: Please fill in the fields marked as required.');\n      flag = false;\n    }\n  });\n\n  if (flag) {\n    fullGames.push(req.body.values);\n    var smallGame = {\n      id: req.body.values.id,\n      name: req.body.values.name,\n      year: req.body.values.year\n    };\n    reducedGames.push(smallGame);\n\n    _fs[\"default\"].writeFileSync('./server/api/output.json', JSON.stringify(fullGames));\n  }\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlci5qcyJdLCJuYW1lcyI6WyJyYXdHYW1lRGF0YSIsImZzIiwicmVhZEZpbGVTeW5jIiwiZW5jb2RpbmciLCJmdWxsR2FtZXMiLCJKU09OIiwicGFyc2UiLCJyZWR1Y2VkR2FtZXMiLCJtYXAiLCJnYW1lIiwiaWQiLCJuYW1lIiwieWVhciIsInBsYXllcnMiLCJyb3V0ZXIiLCJFeHByZXNzIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwianNvbiIsImdhbWVJRCIsInBhcmFtcyIsIm1hdGNoIiwiZmluZCIsInN0YXR1cyIsImVycm9yIiwicG9zdCIsImZsYWciLCJjb25zb2xlIiwibG9nIiwic3RyaW5naWZ5IiwiYm9keSIsInZhbHVlcyIsImZvckVhY2giLCJlbGVtZW50IiwicHVzaCIsInNtYWxsR2FtZSIsIndyaXRlRmlsZVN5bmMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7QUFDQTs7OztBQUZBO0FBSUE7QUFDQSxJQUFNQSxXQUFXLEdBQUdDLGVBQUdDLFlBQUgsQ0FBZ0Isd0JBQWhCLEVBQTBDO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQTFDLENBQXBCOztBQUNBLElBQU1DLFNBQVMsR0FBR0MsSUFBSSxDQUFDQyxLQUFMLENBQVdOLFdBQVgsQ0FBbEIsQyxDQUVBOztBQUNBLElBQU1PLFlBQVksR0FBR0gsU0FBUyxDQUFDSSxHQUFWLENBQWMsVUFBQ0MsSUFBRCxFQUFVO0FBQzNDLFNBQU87QUFDTEMsSUFBQUEsRUFBRSxFQUFFRCxJQUFJLENBQUNDLEVBREo7QUFFTEMsSUFBQUEsSUFBSSxFQUFFRixJQUFJLENBQUNFLElBRk47QUFHTEMsSUFBQUEsSUFBSSxFQUFFSCxJQUFJLENBQUNHLElBSE47QUFJTEMsSUFBQUEsT0FBTyxFQUFFSixJQUFJLENBQUNJO0FBSlQsR0FBUDtBQU1ELENBUG9CLENBQXJCLEMsQ0FRQTs7QUFDQSxJQUFNQyxNQUFNLEdBQUcsSUFBSUMsb0JBQVFDLE1BQVosRUFBZixDLENBRUE7O0FBQ0FGLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLFFBQVgsRUFBcUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDakNBLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTYixZQUFUO0FBQ0QsQ0FGRCxFLENBSUE7O0FBQ0FPLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLFdBQVgsRUFBd0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDcEM7QUFDQSxNQUFNRSxNQUFNLEdBQUdILEdBQUcsQ0FBQ0ksTUFBSixDQUFXWixFQUExQixDQUZvQyxDQUlwQzs7QUFDQSxNQUFNYSxLQUFLLEdBQUduQixTQUFTLENBQUNvQixJQUFWLENBQWUsVUFBQWYsSUFBSSxFQUFJO0FBQ25DO0FBQ0EsV0FBUUEsSUFBSSxDQUFDQyxFQUFMLEtBQVlXLE1BQXBCO0FBQ0QsR0FIYSxDQUFkLENBTG9DLENBVXBDOztBQUNBLE1BQUksQ0FBQ0UsS0FBTCxFQUFZO0FBQ1ZKLElBQUFBLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JMLElBQWhCLENBQXFCO0FBQUVNLE1BQUFBLEtBQUssRUFBRTtBQUFULEtBQXJCO0FBQ0QsR0FGRCxNQUVPO0FBQ0xQLElBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTRyxLQUFUO0FBQ0Q7QUFDRixDQWhCRCxFLENBa0JBO0FBQ0E7O0FBQ0FULE1BQU0sQ0FBQ2EsSUFBUCxDQUFZLGVBQVosRUFBNkJaLG9CQUFRSyxJQUFSLEVBQTdCLEVBQTZDLFVBQUNGLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3pELE1BQUlTLElBQUksR0FBRyxJQUFYO0FBQ0FDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZekIsSUFBSSxDQUFDMEIsU0FBTCxDQUFlYixHQUFHLENBQUNjLElBQUosQ0FBU0MsTUFBeEIsRUFBZ0MsSUFBaEMsRUFBc0MsQ0FBdEMsQ0FBWjtBQUNBN0IsRUFBQUEsU0FBUyxDQUFDOEIsT0FBVixDQUFrQixVQUFBQyxPQUFPLEVBQUk7QUFDM0IsUUFBSWpCLEdBQUcsQ0FBQ2MsSUFBSixDQUFTQyxNQUFULENBQWdCdkIsRUFBaEIsS0FBdUJ5QixPQUFPLENBQUN6QixFQUFuQyxFQUF1QztBQUNyQ21CLE1BQUFBLE9BQU8sQ0FBQ0gsS0FBUixDQUFjLG9EQUFkO0FBQ0FFLE1BQUFBLElBQUksR0FBRyxLQUFQO0FBQ0QsS0FIRCxNQUdPLElBQUlWLEdBQUcsQ0FBQ2MsSUFBSixDQUFTQyxNQUFULENBQWdCdkIsRUFBaEIsS0FBdUIsSUFBdkIsSUFBK0JRLEdBQUcsQ0FBQ2MsSUFBSixDQUFTQyxNQUFULENBQWdCdEIsSUFBaEIsS0FBeUIsSUFBNUQsRUFBa0U7QUFDdkVrQixNQUFBQSxPQUFPLENBQUNILEtBQVIsQ0FBYyxxRUFBZDtBQUNBRSxNQUFBQSxJQUFJLEdBQUcsS0FBUDtBQUNEO0FBQ0YsR0FSRDs7QUFTQSxNQUFJQSxJQUFKLEVBQVU7QUFDUnhCLElBQUFBLFNBQVMsQ0FBQ2dDLElBQVYsQ0FBZWxCLEdBQUcsQ0FBQ2MsSUFBSixDQUFTQyxNQUF4QjtBQUNBLFFBQU1JLFNBQVMsR0FBRztBQUNoQjNCLE1BQUFBLEVBQUUsRUFBRVEsR0FBRyxDQUFDYyxJQUFKLENBQVNDLE1BQVQsQ0FBZ0J2QixFQURKO0FBRWhCQyxNQUFBQSxJQUFJLEVBQUVPLEdBQUcsQ0FBQ2MsSUFBSixDQUFTQyxNQUFULENBQWdCdEIsSUFGTjtBQUdoQkMsTUFBQUEsSUFBSSxFQUFFTSxHQUFHLENBQUNjLElBQUosQ0FBU0MsTUFBVCxDQUFnQnJCO0FBSE4sS0FBbEI7QUFLQUwsSUFBQUEsWUFBWSxDQUFDNkIsSUFBYixDQUFrQkMsU0FBbEI7O0FBQ0FwQyxtQkFBR3FDLGFBQUgsQ0FBaUIsMEJBQWpCLEVBQTZDakMsSUFBSSxDQUFDMEIsU0FBTCxDQUFlM0IsU0FBZixDQUE3QztBQUNEO0FBQ0YsQ0F0QkQ7ZUF3QmVVLE0iLCJzb3VyY2VSb290IjoiRDpcXFJlcG9zXFxCb2FyZEdhbWVXZWJzaXRlXFxCb2FyZEdhbWVXZWJzaXRlXFxSZWFjdEV4YW1wbGVzXFxCb2FyZEdhbWVXZWJzaXRlXFxzZXJ2ZXJcXGFwaVxcIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IG5lZWRlZCBsaWJzXHJcbmltcG9ydCBmcyBmcm9tICdmcydcclxuaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcydcclxuXHJcbi8vIHJlYWQgaW4gZ2FtZSBkYXRhIGZyb20gb3V0cHV0IGZpbGUgZnJvbSBtb2R1bGUgMi0xXHJcbmNvbnN0IHJhd0dhbWVEYXRhID0gZnMucmVhZEZpbGVTeW5jKCdzZXJ2ZXIvYXBpL291dHB1dC5qc29uJywgeyBlbmNvZGluZzogJ3V0ZjgnIH0pXHJcbmNvbnN0IGZ1bGxHYW1lcyA9IEpTT04ucGFyc2UocmF3R2FtZURhdGEpXHJcblxyXG4vLyBjcmVhdGUgYSByZWR1Y2VkIGNvbnRlbnQgdmVyc2lvbiBvZiBhbGwgZ2FtZXMgZm9yIHVzZSBvbiBsYW5kaW5nIHBhZ2UuXHJcbmNvbnN0IHJlZHVjZWRHYW1lcyA9IGZ1bGxHYW1lcy5tYXAoKGdhbWUpID0+IHtcclxuICByZXR1cm4ge1xyXG4gICAgaWQ6IGdhbWUuaWQsXHJcbiAgICBuYW1lOiBnYW1lLm5hbWUsXHJcbiAgICB5ZWFyOiBnYW1lLnllYXIsXHJcbiAgICBwbGF5ZXJzOiBnYW1lLnBsYXllcnNcclxuICB9XHJcbn0pXHJcbi8vIENyZWF0ZSBleHByZXNzIHJvdXRlciBvYmplY3RcclxuY29uc3Qgcm91dGVyID0gbmV3IEV4cHJlc3MuUm91dGVyKClcclxuXHJcbi8vIFNldHVwIGZvciBhIC9nYW1lcyBlbmRwb2ludCB3aWxsIHJldHVybiBKU09OIGZvciBhbGwgZ2FtZXMgaW4gdGhlIG91dHB1dCBmaWxlLlxyXG5yb3V0ZXIuZ2V0KCcvZ2FtZXMnLCAocmVxLCByZXMpID0+IHtcclxuICByZXMuanNvbihyZWR1Y2VkR2FtZXMpXHJcbn0pXHJcblxyXG4vLyBTZXR1cCBmb3IgYSAvZ2FtZS9pZCBlbmRwb2ludCwgcmV0dXJucyBhIHNpbmdsZSBnYW1lIGlmIGZvdW5kIGJhc2VkIG9uIElEIGdpdmVuLlxyXG5yb3V0ZXIuZ2V0KCcvZ2FtZS86aWQnLCAocmVxLCByZXMpID0+IHtcclxuICAvLyB0YWtlIHRoZSBJRCBnaXZlbiBpbiBVUkwgYW5kIG1ha2UgaXQgYW4gaW50IHRoZW4gc2V0IGl0IHRvIGEgdmFyaWFibGUgZm9yIHVzZS5cclxuICBjb25zdCBnYW1lSUQgPSByZXEucGFyYW1zLmlkXHJcblxyXG4gIC8vIEZpbmQgYW55IGdhbWVzIHdpdGggbWF0Y2hpbmcgSUQsIHJldHVybiB0aGF0IG9iamVjdCB3aXRoIGZ1bGwgZGV0YWlscy5cclxuICBjb25zdCBtYXRjaCA9IGZ1bGxHYW1lcy5maW5kKGdhbWUgPT4ge1xyXG4gICAgLy8gQ29tcGFyaW5nIGludHMgc28gbm90IHN1cmUgd2h5IHlvdSB3b3VsZCB3YW50ID09PSB0aGF0IGRvZXNudCB3b3JrLlxyXG4gICAgcmV0dXJuIChnYW1lLmlkID09PSBnYW1lSUQpXHJcbiAgfSlcclxuXHJcbiAgLy8gSWYgbm8gbWF0Y2ggd2FzIGZvdW5kIHJldHVybiA0MDQsIGlmIG1hdGNoIGlzIGZvdW5kIHJldHVybiBpdCBhcyBKU09OLlxyXG4gIGlmICghbWF0Y2gpIHtcclxuICAgIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgZXJyb3I6ICdpZCBub3QgZm91bmQnIH0pXHJcbiAgfSBlbHNlIHtcclxuICAgIHJlcy5qc29uKG1hdGNoKVxyXG4gIH1cclxufSlcclxuXHJcbi8vIEluc2VydCBEYXRhIFJvdXRlIHRoYXQgd2lsbCB1cGRhdGUgdGhlIEpTT04gZmlsZSB3aGljaCB3ZSBhcmUgdXNpbmcgYXMgYSBiYXNlIGZvciBhbGwgZ2FtZXMgaW4gdGhlIHN5c3RlbVxyXG4vLyBUaGlzIGNyZWF0ZXMgYSBzYXZlZCB2ZXJzaW9uIG9mIHRoZSBnYW1lIHdoaWNoIHdpbGwgcmVuZGVyIHRoZSBuZXh0IHRpbWUgdGhlIHBhZ2UgaXMgb3BlbmVkLlxyXG5yb3V0ZXIucG9zdCgnL2dhbWUvaW5zZXJ0LycsIEV4cHJlc3MuanNvbigpLCAocmVxLCByZXMpID0+IHtcclxuICBsZXQgZmxhZyA9IHRydWVcclxuICBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShyZXEuYm9keS52YWx1ZXMsIG51bGwsIDIpKVxyXG4gIGZ1bGxHYW1lcy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgaWYgKHJlcS5ib2R5LnZhbHVlcy5pZCA9PT0gZWxlbWVudC5pZCkge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdBbiBvYmplY3Qgd2l0aCB0aGF0IElEIGFscmVhZHkgZXhpc3RzIHRyeSBhIG5ldyBJRCcpXHJcbiAgICAgIGZsYWcgPSBmYWxzZVxyXG4gICAgfSBlbHNlIGlmIChyZXEuYm9keS52YWx1ZXMuaWQgPT09IG51bGwgfHwgcmVxLmJvZHkudmFsdWVzLm5hbWUgPT09IG51bGwpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignQW4gZXJyb3IgaGFzIG9jY3VyZWQ6IFBsZWFzZSBmaWxsIGluIHRoZSBmaWVsZHMgbWFya2VkIGFzIHJlcXVpcmVkLicpXHJcbiAgICAgIGZsYWcgPSBmYWxzZVxyXG4gICAgfVxyXG4gIH0pXHJcbiAgaWYgKGZsYWcpIHtcclxuICAgIGZ1bGxHYW1lcy5wdXNoKHJlcS5ib2R5LnZhbHVlcylcclxuICAgIGNvbnN0IHNtYWxsR2FtZSA9IHtcclxuICAgICAgaWQ6IHJlcS5ib2R5LnZhbHVlcy5pZCxcclxuICAgICAgbmFtZTogcmVxLmJvZHkudmFsdWVzLm5hbWUsXHJcbiAgICAgIHllYXI6IHJlcS5ib2R5LnZhbHVlcy55ZWFyXHJcbiAgICB9XHJcbiAgICByZWR1Y2VkR2FtZXMucHVzaChzbWFsbEdhbWUpXHJcbiAgICBmcy53cml0ZUZpbGVTeW5jKCcuL3NlcnZlci9hcGkvb3V0cHV0Lmpzb24nLCBKU09OLnN0cmluZ2lmeShmdWxsR2FtZXMpKVxyXG4gIH1cclxufSlcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHJvdXRlclxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "router.js"
      ],
      "names": [
        "rawGameData",
        "fs",
        "readFileSync",
        "encoding",
        "fullGames",
        "JSON",
        "parse",
        "reducedGames",
        "map",
        "game",
        "id",
        "name",
        "year",
        "players",
        "router",
        "Express",
        "Router",
        "get",
        "req",
        "res",
        "json",
        "gameID",
        "params",
        "match",
        "find",
        "status",
        "error",
        "post",
        "flag",
        "console",
        "log",
        "stringify",
        "body",
        "values",
        "forEach",
        "element",
        "push",
        "smallGame",
        "writeFileSync"
      ],
      "mappings": ";;;;;;;AACA;;AACA;;;;AAFA;AAIA;AACA,IAAMA,WAAW,GAAGC,eAAGC,YAAH,CAAgB,wBAAhB,EAA0C;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAA1C,CAApB;;AACA,IAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWN,WAAX,CAAlB,C,CAEA;;AACA,IAAMO,YAAY,GAAGH,SAAS,CAACI,GAAV,CAAc,UAACC,IAAD,EAAU;AAC3C,SAAO;AACLC,IAAAA,EAAE,EAAED,IAAI,CAACC,EADJ;AAELC,IAAAA,IAAI,EAAEF,IAAI,CAACE,IAFN;AAGLC,IAAAA,IAAI,EAAEH,IAAI,CAACG,IAHN;AAILC,IAAAA,OAAO,EAAEJ,IAAI,CAACI;AAJT,GAAP;AAMD,CAPoB,CAArB,C,CAQA;;AACA,IAAMC,MAAM,GAAG,IAAIC,oBAAQC,MAAZ,EAAf,C,CAEA;;AACAF,MAAM,CAACG,GAAP,CAAW,QAAX,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjCA,EAAAA,GAAG,CAACC,IAAJ,CAASb,YAAT;AACD,CAFD,E,CAIA;;AACAO,MAAM,CAACG,GAAP,CAAW,WAAX,EAAwB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpC;AACA,MAAME,MAAM,GAAGH,GAAG,CAACI,MAAJ,CAAWZ,EAA1B,CAFoC,CAIpC;;AACA,MAAMa,KAAK,GAAGnB,SAAS,CAACoB,IAAV,CAAe,UAAAf,IAAI,EAAI;AACnC;AACA,WAAQA,IAAI,CAACC,EAAL,KAAYW,MAApB;AACD,GAHa,CAAd,CALoC,CAUpC;;AACA,MAAI,CAACE,KAAL,EAAY;AACVJ,IAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AAAEM,MAAAA,KAAK,EAAE;AAAT,KAArB;AACD,GAFD,MAEO;AACLP,IAAAA,GAAG,CAACC,IAAJ,CAASG,KAAT;AACD;AACF,CAhBD,E,CAkBA;AACA;;AACAT,MAAM,CAACa,IAAP,CAAY,eAAZ,EAA6BZ,oBAAQK,IAAR,EAA7B,EAA6C,UAACF,GAAD,EAAMC,GAAN,EAAc;AACzD,MAAIS,IAAI,GAAG,IAAX;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYzB,IAAI,CAAC0B,SAAL,CAAeb,GAAG,CAACc,IAAJ,CAASC,MAAxB,EAAgC,IAAhC,EAAsC,CAAtC,CAAZ;AACA7B,EAAAA,SAAS,CAAC8B,OAAV,CAAkB,UAAAC,OAAO,EAAI;AAC3B,QAAIjB,GAAG,CAACc,IAAJ,CAASC,MAAT,CAAgBvB,EAAhB,KAAuByB,OAAO,CAACzB,EAAnC,EAAuC;AACrCmB,MAAAA,OAAO,CAACH,KAAR,CAAc,oDAAd;AACAE,MAAAA,IAAI,GAAG,KAAP;AACD,KAHD,MAGO,IAAIV,GAAG,CAACc,IAAJ,CAASC,MAAT,CAAgBvB,EAAhB,KAAuB,IAAvB,IAA+BQ,GAAG,CAACc,IAAJ,CAASC,MAAT,CAAgBtB,IAAhB,KAAyB,IAA5D,EAAkE;AACvEkB,MAAAA,OAAO,CAACH,KAAR,CAAc,qEAAd;AACAE,MAAAA,IAAI,GAAG,KAAP;AACD;AACF,GARD;;AASA,MAAIA,IAAJ,EAAU;AACRxB,IAAAA,SAAS,CAACgC,IAAV,CAAelB,GAAG,CAACc,IAAJ,CAASC,MAAxB;AACA,QAAMI,SAAS,GAAG;AAChB3B,MAAAA,EAAE,EAAEQ,GAAG,CAACc,IAAJ,CAASC,MAAT,CAAgBvB,EADJ;AAEhBC,MAAAA,IAAI,EAAEO,GAAG,CAACc,IAAJ,CAASC,MAAT,CAAgBtB,IAFN;AAGhBC,MAAAA,IAAI,EAAEM,GAAG,CAACc,IAAJ,CAASC,MAAT,CAAgBrB;AAHN,KAAlB;AAKAL,IAAAA,YAAY,CAAC6B,IAAb,CAAkBC,SAAlB;;AACApC,mBAAGqC,aAAH,CAAiB,0BAAjB,EAA6CjC,IAAI,CAAC0B,SAAL,CAAe3B,SAAf,CAA7C;AACD;AACF,CAtBD;eAwBeU,M",
      "sourceRoot": "D:\\Repos\\BoardGameWebsite\\BoardGameWebsite\\ReactExamples\\BoardGameWebsite\\server\\api\\",
      "sourcesContent": [
        "// import needed libs\r\nimport fs from 'fs'\r\nimport Express from 'express'\r\n\r\n// read in game data from output file from module 2-1\r\nconst rawGameData = fs.readFileSync('server/api/output.json', { encoding: 'utf8' })\r\nconst fullGames = JSON.parse(rawGameData)\r\n\r\n// create a reduced content version of all games for use on landing page.\r\nconst reducedGames = fullGames.map((game) => {\r\n  return {\r\n    id: game.id,\r\n    name: game.name,\r\n    year: game.year,\r\n    players: game.players\r\n  }\r\n})\r\n// Create express router object\r\nconst router = new Express.Router()\r\n\r\n// Setup for a /games endpoint will return JSON for all games in the output file.\r\nrouter.get('/games', (req, res) => {\r\n  res.json(reducedGames)\r\n})\r\n\r\n// Setup for a /game/id endpoint, returns a single game if found based on ID given.\r\nrouter.get('/game/:id', (req, res) => {\r\n  // take the ID given in URL and make it an int then set it to a variable for use.\r\n  const gameID = req.params.id\r\n\r\n  // Find any games with matching ID, return that object with full details.\r\n  const match = fullGames.find(game => {\r\n    // Comparing ints so not sure why you would want === that doesnt work.\r\n    return (game.id === gameID)\r\n  })\r\n\r\n  // If no match was found return 404, if match is found return it as JSON.\r\n  if (!match) {\r\n    res.status(404).json({ error: 'id not found' })\r\n  } else {\r\n    res.json(match)\r\n  }\r\n})\r\n\r\n// Insert Data Route that will update the JSON file which we are using as a base for all games in the system\r\n// This creates a saved version of the game which will render the next time the page is opened.\r\nrouter.post('/game/insert/', Express.json(), (req, res) => {\r\n  let flag = true\r\n  console.log(JSON.stringify(req.body.values, null, 2))\r\n  fullGames.forEach(element => {\r\n    if (req.body.values.id === element.id) {\r\n      console.error('An object with that ID already exists try a new ID')\r\n      flag = false\r\n    } else if (req.body.values.id === null || req.body.values.name === null) {\r\n      console.error('An error has occured: Please fill in the fields marked as required.')\r\n      flag = false\r\n    }\r\n  })\r\n  if (flag) {\r\n    fullGames.push(req.body.values)\r\n    const smallGame = {\r\n      id: req.body.values.id,\r\n      name: req.body.values.name,\r\n      year: req.body.values.year\r\n    }\r\n    reducedGames.push(smallGame)\r\n    fs.writeFileSync('./server/api/output.json', JSON.stringify(fullGames))\r\n  }\r\n})\r\n\r\nexport default router\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1619394801045
  }
}